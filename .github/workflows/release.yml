name: Prepare Release

on:
  workflow_dispatch:
  push:
    branches:
      - env/staging

jobs:
  prepare_release:
    name: Draft Production Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read package.json
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./package.json
      - uses: actions/github-script@v3
        env:
          PACKAGE_JSON_STRING: ${{steps.package.outputs.content}}
        with:
          script: |
            const package = JSON.parse(process.env.PACKAGE_JSON_STRING)
            const response = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            const draft = response.data.find(rel => rel.draft)
            const name = `Release ${package.version} (${new Date().toISOString()})`
            if (draft) {
              console.log(`Draft release found: "${draft.name}"`)
              console.log(`Updating to: "${name}"...`)
              await github.repos.updateRelease({
                draft: true,
                name,
                owner: context.repo.owner,
                release_id: draft.id,
                repo: context.repo.repo,
                tag_name: `v${package.version}`,
                target_commitish: github.sha,
              })
            } else {
              console.log(`No draft release, Creating "${name}"...`)
              await github.repos.updateRelease({
                draft: true,
                name,
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: `v${package.version}`,
                target_commitish: github.sha,
              })
            }
